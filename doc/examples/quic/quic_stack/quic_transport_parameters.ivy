#lang ivy1.7

include quic_types
include quic_transport_error_code
include quic_stream
include tls_record

type trans_params_struct

#TODO
#original_connection_id 

object transport_parameter = {
    type this
    action set(p:this,s:trans_params_struct) returns (s:trans_params_struct) = {}
}


module trans_params_ops(ptype) = {
    destructor is_set(S:trans_params_struct) : bool
    destructor value(S:trans_params_struct) : ptype
    action set(p:ptype,s:trans_params_struct) returns (s:trans_params_struct) = {
#        require ~is_set(s);
        is_set(s) := true;
        value(s) := p;
    }
}

object original_destination_connection_id   = { # hcid picoquic ?
    variant this of transport_parameter = struct {  # tag = 15
        #name is important for parsing
        dcid : cid
    }
    instantiate trans_params_ops(this)
}

object initial_max_stream_data_bidi_local = {
    variant this of transport_parameter = struct {  # tag = 0
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object initial_max_data = {
    variant this of transport_parameter = struct {  # tag = 1
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object initial_max_stream_id_bidi = {
    variant this of transport_parameter = struct {  # tag = 2
        stream_id_16 : stream_id
    }
    instantiate trans_params_ops(this)
}

object max_idle_timeout  = {
    variant this of transport_parameter = struct {  # tag = 3
        seconds_16 : microsecs
    }
    instantiate trans_params_ops(this)
}

object preferred_address = {
    variant this of transport_parameter = struct {  # tag = 4
        # TODO: fill this in
    }
    instantiate trans_params_ops(this)
}

object max_packet_size = {
    variant this of transport_parameter = struct {  # tag = 5
        stream_pos_16 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object stateless_reset_token = {
    variant this of transport_parameter = struct {  # tag = 6
        data_8 : stream_data
    }
    instantiate trans_params_ops(this)
}

object ack_delay_exponent = {
    variant this of transport_parameter = struct {  # tag = 7
        exponent_8 : microsecs
    }
    instantiate trans_params_ops(this)
}

object initial_max_stream_id_uni = {
    variant this of transport_parameter = struct {  # tag = 8
        stream_id_16 : stream_id
    }
    instantiate trans_params_ops(this)
}

object disable_active_migration  = {
    variant this of transport_parameter = struct {  # tag = 9
    }
    instantiate trans_params_ops(this)
}

object initial_max_stream_data_bidi_remote = {
    variant this of transport_parameter = struct {  # tag = 10
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object initial_max_stream_data_uni = {
    variant this of transport_parameter = struct {  # tag = 11
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object max_ack_delay = {
    variant this of transport_parameter = struct {  # tag = 12
        exponent_8 : microsecs
    }
    instantiate trans_params_ops(this)
}

object active_connection_id_limit = {
    variant this of transport_parameter = struct {  # tag = 14
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object initial_source_connection_id  = { # hcid picoquic ?
    variant this of transport_parameter = struct {  # tag = 15
        #name is important for parsing
        scid : cid
    }
    instantiate trans_params_ops(this)
}

object retry_source_connection_id   = { # hcid picoquic ?
    variant this of transport_parameter = struct {  # tag = 0x10
        #name is important for parsing
        scid : cid
    }
    instantiate trans_params_ops(this)
}

# https://tools.ietf.org/html/draft-ferrieuxhamchaoui-quic-lossbits-03
# TODO implement test
object loss_bits = {
    variant this of transport_parameter = struct {  # tag = 4183
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

#TODO for now, used for picoquic client as marker for the last tls.unknown_extension that bug to 
#parse without hardcode
object grease_quic_bit = {
    variant this of transport_parameter = struct {  # tag = 0x2ab2
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

#TODO not implememented, considered as unknown_transport_parameter for now
object enable_time_stamp = {
    variant this of transport_parameter = struct {  # tag = 0x7158
        stream_pos_32 : stream_pos
    }
    instantiate trans_params_ops(this)
}

object min_ack_delay  = {
    variant this of transport_parameter = struct {  # tag = 0xff02de1a
        exponent_8 : microsecs
    }
    instantiate trans_params_ops(this)
}

# check if good
object unknown_transport_parameter = {
    variant this of transport_parameter = struct {  # tag = x
        unknown : stream_pos
    }
    instantiate trans_params_ops(this)
}


object quic_transport_parameters = {
    variant this of tls.extension = struct {
#        initial_version : version,  # holds negotiated version in encrypted extensions
#        versions : vector[version], # empty in client_hello
        transport_parameters : vector[transport_parameter]
    }
}
